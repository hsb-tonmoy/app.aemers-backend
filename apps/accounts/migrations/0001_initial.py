# Generated by Django 4.0.1 on 2022-08-02 19:59

import apps.accounts.models
import apps.accounts.utils
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import imagekit.models.fields
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Accounts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email Address')),
                ('username', models.CharField(blank=True, default=apps.accounts.utils.random_username, error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='First name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='Last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('account_type', models.PositiveSmallIntegerField(choices=[(1, 'Visitor'), (2, 'Client'), (3, 'Consultant'), (4, 'Manager'), (5, 'Admin'), (6, 'SuperAdmin')], default=1, verbose_name='Account Type')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Account',
                'verbose_name_plural': 'Accounts',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_pic', imagekit.models.fields.ProcessedImageField(blank=True, default='profiles/avatar.png', null=True, upload_to=apps.accounts.models.upload_to_path)),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Your Name')),
                ('country', models.CharField(blank=True, max_length=255, null=True, verbose_name='Country')),
                ('phone', models.CharField(blank=True, max_length=255, null=True, verbose_name='Phone')),
                ('degree', models.CharField(blank=True, max_length=255, null=True, verbose_name='Degree')),
                ('major', models.CharField(blank=True, max_length=255, null=True, verbose_name='Major')),
                ('education', models.JSONField(blank=True, null=True, verbose_name='Education')),
                ('english_proficiency', models.CharField(choices=[('ielts', 'IELTS'), ('toefl', 'TOEFL'), ('duolingo', 'Duolingo'), ('no-test', 'Wish to get enrolled without any test'), ('moi', 'Wish to get enrolled with Medium Of Instruction'), ('plan-to', 'Wish to take IELTS')], default='ielts', max_length=15, verbose_name='English Proficiency')),
                ('english_proficiency_score', models.CharField(blank=True, max_length=255, null=True, verbose_name='Score')),
                ('message', models.TextField(blank=True, null=True, verbose_name='Message')),
                ('status', models.PositiveSmallIntegerField(choices=[(0, 'Default'), (1, 'Package Sent'), (2, 'Converted'), (3, 'Follow-up'), (4, 'Muted')], default=0, verbose_name='Status')),
                ('rating', models.PositiveSmallIntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], default=1, verbose_name='Rating')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='HistoricalApplicationStatus',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('application_started', models.BooleanField(default=False, verbose_name='Application Started?')),
                ('file_opening', models.PositiveSmallIntegerField(choices=[(0, 'Pending'), (1, 'Started'), (2, 'Complete')], default=0, verbose_name='File Opening')),
                ('orientation', models.PositiveSmallIntegerField(choices=[(0, 'Pending'), (1, 'Started'), (2, 'Complete')], default=0, verbose_name='Orientation')),
                ('pre_application_form', models.PositiveSmallIntegerField(choices=[(0, 'Pending'), (1, 'Started'), (2, 'Complete')], default=0, verbose_name='Pre-Application Form')),
                ('documents_upload', models.PositiveSmallIntegerField(choices=[(0, 'Pending'), (1, 'Started'), (2, 'Complete')], default=0, verbose_name='Documents Upload')),
                ('i_20_upload', models.PositiveSmallIntegerField(choices=[(0, 'Pending'), (1, 'Started'), (2, 'Complete')], default=0, verbose_name='I-20 Upload')),
                ('ds_160_filed', models.PositiveSmallIntegerField(choices=[(0, 'Pending'), (1, 'Started'), (2, 'Complete')], default=0, verbose_name='DS-160 Filed')),
                ('sevis_payment', models.PositiveSmallIntegerField(choices=[(0, 'Pending'), (1, 'Started'), (2, 'Complete')], default=0, verbose_name='SEVIS Payment')),
                ('visa_fee_payment', models.PositiveSmallIntegerField(choices=[(0, 'Pending'), (1, 'Started'), (2, 'Complete')], default=0, verbose_name='Visa Fee Payment')),
                ('visa_interview', models.PositiveSmallIntegerField(choices=[(0, 'Pending'), (1, 'Started'), (2, 'Complete')], default=0, verbose_name='Visa Interview')),
                ('pre_departure_session', models.PositiveSmallIntegerField(choices=[(0, 'Pending'), (1, 'Started'), (2, 'Complete')], default=0, verbose_name='Pre-Departure Session')),
                ('welcome_to_usa', models.PositiveSmallIntegerField(choices=[(0, 'Pending'), (1, 'Started'), (2, 'Complete')], default=0, verbose_name='Welcome to USA')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Application Status',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalAccounts',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(db_index=True, max_length=254, verbose_name='Email Address')),
                ('username', models.CharField(blank=True, db_index=True, default=apps.accounts.utils.random_username, error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='First name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='Last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('account_type', models.PositiveSmallIntegerField(choices=[(1, 'Visitor'), (2, 'Client'), (3, 'Consultant'), (4, 'Manager'), (5, 'Admin'), (6, 'SuperAdmin')], default=1, verbose_name='Account Type')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Account',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='ClientFollowing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='managers', to=settings.AUTH_USER_MODEL)),
                ('manager', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clients', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='ApplicationStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('application_started', models.BooleanField(default=False, verbose_name='Application Started?')),
                ('file_opening', models.PositiveSmallIntegerField(choices=[(0, 'Pending'), (1, 'Started'), (2, 'Complete')], default=0, verbose_name='File Opening')),
                ('orientation', models.PositiveSmallIntegerField(choices=[(0, 'Pending'), (1, 'Started'), (2, 'Complete')], default=0, verbose_name='Orientation')),
                ('pre_application_form', models.PositiveSmallIntegerField(choices=[(0, 'Pending'), (1, 'Started'), (2, 'Complete')], default=0, verbose_name='Pre-Application Form')),
                ('documents_upload', models.PositiveSmallIntegerField(choices=[(0, 'Pending'), (1, 'Started'), (2, 'Complete')], default=0, verbose_name='Documents Upload')),
                ('i_20_upload', models.PositiveSmallIntegerField(choices=[(0, 'Pending'), (1, 'Started'), (2, 'Complete')], default=0, verbose_name='I-20 Upload')),
                ('ds_160_filed', models.PositiveSmallIntegerField(choices=[(0, 'Pending'), (1, 'Started'), (2, 'Complete')], default=0, verbose_name='DS-160 Filed')),
                ('sevis_payment', models.PositiveSmallIntegerField(choices=[(0, 'Pending'), (1, 'Started'), (2, 'Complete')], default=0, verbose_name='SEVIS Payment')),
                ('visa_fee_payment', models.PositiveSmallIntegerField(choices=[(0, 'Pending'), (1, 'Started'), (2, 'Complete')], default=0, verbose_name='Visa Fee Payment')),
                ('visa_interview', models.PositiveSmallIntegerField(choices=[(0, 'Pending'), (1, 'Started'), (2, 'Complete')], default=0, verbose_name='Visa Interview')),
                ('pre_departure_session', models.PositiveSmallIntegerField(choices=[(0, 'Pending'), (1, 'Started'), (2, 'Complete')], default=0, verbose_name='Pre-Departure Session')),
                ('welcome_to_usa', models.PositiveSmallIntegerField(choices=[(0, 'Pending'), (1, 'Started'), (2, 'Complete')], default=0, verbose_name='Welcome to USA')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='application', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Application Status',
                'verbose_name_plural': 'Application Statuses',
                'ordering': ['id'],
            },
        ),
        migrations.AddConstraint(
            model_name='clientfollowing',
            constraint=models.UniqueConstraint(fields=('manager', 'client'), name='unique_followers'),
        ),
    ]
